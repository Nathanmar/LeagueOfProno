import { defineSchema, defineTable } from "convex/server";
import { v } from "convex/values";

export default defineSchema({
  Group: defineTable({
    created_by: v.string(),
    created_by_id: v.string(),
    created_date: v.string(),
    description: v.string(),
    id: v.string(),
    invite_code: v.string(),
    is_sample: v.string(),
    member_scores: v.record(v.string(), v.float64()),
    members: v.array(v.string()),
    name: v.string(),
    rankings: v.array(
      v.object({
        email: v.string(),
        group_id: v.string(),
        rank: v.float64(),
        score: v.float64(),
        user_id: v.string(),
      })
    ),
    updated_date: v.string(),
  }),
  Match: defineTable({
    created_by: v.string(),
    created_by_id: v.string(),
    created_date: v.string(),
    id: v.string(),
    is_sample: v.string(),
    match_date: v.string(),
    score_a: v.string(),
    score_b: v.string(),
    status: v.string(),
    team_a: v.string(),
    team_a_logo: v.string(),
    team_b: v.string(),
    team_b_logo: v.string(),
    tournament: v.string(),
    updated_date: v.string(),
    winner: v.string(),
  }),
  Prediction: defineTable({
    created_by: v.string(),
    created_by_id: v.string(),
    created_date: v.string(),
    group_id: v.string(),
    id: v.string(),
    is_correct: v.string(),
    is_exact_score: v.string(),
    is_sample: v.string(),
    match_id: v.string(),
    points_earned: v.string(),
    predicted_score_a: v.string(),
    predicted_score_b: v.string(),
    predicted_winner: v.string(),
    updated_date: v.string(),
    user_id: v.string(),
  }),
});
